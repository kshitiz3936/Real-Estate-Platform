// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.8.0 < 0.9.0;

contract UserManagement {
    struct User {
        address userAddress;
        string name;
        bool isVerified;
    }

    mapping(address => User) public users;
    address public admin;

    modifier onlyAdmin() {
        require(msg.sender == admin, "Only admin can perform this action");
        _;
    }

    constructor() {
        admin = msg.sender;
    }

    function registerUser(address _userAddress, string memory _name) public onlyAdmin {
        users[_userAddress] = User({
            userAddress: _userAddress,
            name: _name,
            isVerified: false
        });
    }

    function verifyUser(address _userAddress) public onlyAdmin {
        users[_userAddress].isVerified = true;
    } 

    function getUser(address _userAddress) public view returns (User memory) {
        return users[_userAddress];
    }
}
